{"version":3,"sources":["containers/settings.jsx","store/reducers/user.jsx","actions/actionTypes.jsx","store/reducers/proxy.jsx","store/reducers/index.jsx","store/store.jsx","components/MarkDown.jsx","components/Home.jsx","components/Settings.jsx","actions/actionUser.jsx","components/UsersFunctions.jsx","components/UsersList.jsx","components/Users.jsx","components/SideBar.jsx","actions/actionProxy.jsx","components/ProxiesFunctions.jsx","components/Proxies.jsx","components/createCampaign.jsx","containers/WebPage.jsx","index.jsx"],"names":["settings","url","userReducer","state","isLoading","data","error","action","type","Object","assign","proxyReducer","proxyId","updatedData","filter","proxy","_id","allReducers","combineReducers","users","UserReducers","proxies","ProxyReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","AllReducers","applyMiddleware","thunk","Footer","Layout","Content","React","Component","Header","Home","style","margin","height","overflowY","Settings","background","fetchUsers","dispatch","axios","get","then","response","catch","console","log","Option","Select","layout","labelCol","span","wrapperCol","AddUser","props","setModalVisible","modal","setState","setModalLoading","loading","onFinish","values","a","post","user","reset","formRef","current","resetFields","createRef","this","theme","mode","lineHeight","selectable","Item","key","icon","PlusOutlined","onClick","title","wrapClassName","visible","confirmLoading","onCancel","cancelText","okText","okButtonProps","form","htmlType","name","ref","label","rules","required","defaultValue","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","indexOf","map","value","color","region","ip","port","connect","loader","LoadingOutlined","fontSize","spin","UsersList","usersList","table","length","forEach","push","className","xxl","xl","lg","md","sm","xs","extra","href","width","actions","CloseCircleOutlined","onConfirm","handleDelete","danger","ReloadOutlined","handleUpdate","updateLoaders","bms","bm","ad_accounts","marginLeft","ad_account","account_status_text","pages","page","success","setUpdate_Loaders","res","message","err","index","spinning","size","indicator","tip","marginTop","alignment","gutter","padding","Users","UsersFunctions","SideBar","defaultSelectedKeys","to","HomeOutlined","UserOutlined","InteractionOutlined","SolutionOutlined","SettingOutlined","LogoutOutlined","fetchProxies","help","msg","text","warning","Proxies","checkLoaders","columns","dataIndex","sorter","b","sortDirections","render","record","handleCheck","loadings","setCheck_Loader","checkStatus","dataSource","createCampaign","status","visibleModal","handleCancel","e","resetForm","isUserSelected","isAdAccountSelected","is_proxy_available","ad_account_id","life_events","pixels","user_id","item","load_life_events","formData","campaign","proxy_id","create_campaign_document","id","adsets","pixel_id","campaign_pixel_id","custom_event_type","campaign_custom_event_type","createAdSets_document","success_adsets","SmileOutlined","users_list","display","ad_accounts_list","compaign_sector","adsets_sector","onChange","userSelected","ad_account_Selected","account_id","loadPixels","showIcon","marginBottom","default","pixel","List","fields","add","remove","field","border","fieldKey","event","Sider","WebPage","config","breakpoint","collapsedWidth","onCollapse","collapsed","stype","position","exact","path","component","files","app","document","getElementById","App","ReactDOM"],"mappings":"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","file":"static/js/main.868389d7.chunk.js","sourcesContent":["let settings = {\n    url: \"\",\n};\n\n//console.log(process.env);\n\nif (process.env.NODE_ENV === \"development\") {\n    console.log(\"DEVELOP MODE\");\n    settings.url = \"http://localhost:8080\";\n}\n\nexport default settings;\n","import * as types from './../../actions/actionTypes.jsx';\n\n\nfunction userReducer(state = {\n\tisLoading: false,\n\tdata: {},\n\terror: false}\n, action = null) {\n\tswitch(action.type) {\n\t\tcase types.RECV_USER:\n\t\t\treturn Object.assign({}, state, {isLoading: false, data: action.data, error: false });\n\t\tcase types.REQ_USER:\n\t\t\treturn Object.assign({}, state, {isLoading: true, error: false });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n\nexport default userReducer;","export const REQ_PROXY = \"REQ_PROXY\";\nexport const RECV_PROXY = \"RECV_PROXY\";\nexport const REQ_PROXY_DELETE = \"REQ_PROXY_DELETE\";\n\nexport const REQ_USER = \"REQ_USER\";\nexport const RECV_USER = \"RECV_USER\";\n","import * as types from \"./../../actions/actionTypes.jsx\";\n\nfunction proxyReducer(\n    state = {\n        isLoading: false,\n        data: [],\n        error: false,\n    },\n    action = null\n) {\n    switch (action.type) {\n        case types.RECV_PROXY:\n            return Object.assign({}, state, {\n                isLoading: false,\n                data: action.data,\n                error: false,\n            });\n        case types.REQ_PROXY:\n            return Object.assign({}, state, { isLoading: true, error: false });\n        case types.REQ_PROXY_DELETE: {\n            const proxyId = action.data;\n            let updatedData = state.data.filter(\n                (proxy) => proxy._id !== proxyId\n            );\n\n            return Object.assign({}, state, {\n                isLoading: true,\n                data: updatedData,\n                error: false,\n            });\n        }\n        default:\n            return state;\n    }\n}\n\nexport default proxyReducer;\n","import { combineReducers } from \"redux\";\nimport UserReducers from \"./user.jsx\";\nimport ProxyReducers from \"./proxy.jsx\";\n\nconst allReducers = combineReducers({\n    users: UserReducers,\n    proxies: ProxyReducers,\n});\n\nexport default allReducers;\n","import {createStore, applyMiddleware, compose} from 'redux';\n\nimport AllReducers from './reducers/index.jsx';\n\n\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(AllReducers, composeEnhancers(\n  applyMiddleware(thunk)));\n\n\n\nexport { store };","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nconst { Footer } = Layout;\n\nexport default class MarkDown extends React.Component {\n    render() {\n        return (\n            <Footer style={{ textAlign: \"center\" }}>\n                Scaler 2020 Created by Vladimir N.\n            </Footer>\n        );\n    }\n}\n","import React from \"react\";\n\nimport MarkDown from \"./MarkDown.jsx\";\nimport { Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <Layout>\n                {/* <Header style={{ background: \"#fff\", padding: 0 }}></Header> */}\n\n                <Content\n                    style={{\n                        margin: \"24px 16px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                ></Content>\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\n\nimport MarkDown from \"./MarkDown.jsx\";\nimport { Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nexport default class Settings extends React.Component {\n    render() {\n        return (\n            <Layout>\n                {/* <Header style={{ background: \"#fff\", padding: 0 }}></Header> */}\n\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    В разработке\n                </Content>\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n}\n","import * as types from \"./actionTypes.jsx\";\nimport axios from \"axios\";\n\nfunction requestUser() {\n    return { type: types.REQ_USER };\n}\n\nfunction receiveUser(json) {\n    return {\n        type: types.RECV_USER,\n        data: json,\n    };\n}\n\nexport function fetchUsers(url) {\n    return function (dispatch) {\n        dispatch(requestUser());\n        return axios\n            .get(url)\n            .then(function (response) {\n                dispatch(receiveUser(response.data));\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n    };\n}\n","import settings from \"./../containers/settings\";\n\nimport React from \"react\";\n\nimport { store } from \"../store/store.jsx\";\n\nimport { fetchUsers } from \"./../actions/actionUser.jsx\";\n\nimport axios from \"axios\";\n\nimport { connect } from \"react-redux\";\n\nimport { Menu, Modal, Button, Select } from \"antd\";\n\nimport { PlusOutlined, ReloadOutlined } from \"@ant-design/icons\";\n\nimport { Form, Input } from \"antd\";\nconst { Option } = Select;\n\nlet url = settings.url;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nclass AddUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { modal: false, loading: false };\n        this.formRef = React.createRef();\n    }\n    setModalVisible = (modal) => {\n        this.setState({ modal: modal });\n    };\n    setModalLoading = (loading) => {\n        this.setState({ loading: loading });\n    };\n    onFinish = async (values) => {\n        this.setModalLoading(true);\n        let result = await axios.post(`${url}/api/users/new`, values.user);\n        store.dispatch(fetchUsers(`${url}/api/users/`));\n\n        this.setModalLoading(false);\n        this.setModalVisible(false);\n        this.reset();\n    };\n    reset = () => {\n        this.formRef.current.resetFields();\n    };\n    render() {\n        let proxies = this.props.proxies.data;\n        console.log(proxies);\n        return (\n            <Menu\n                theme=\"light\"\n                mode=\"horizontal\"\n                style={{ lineHeight: \"64px\" }}\n                selectable={false}\n            >\n                <Menu.Item key=\"1\">\n                    <Button\n                        icon={<PlusOutlined />}\n                        onClick={() => this.setModalVisible(true)}\n                    >\n                        Добавить пользователя\n                    </Button>\n                </Menu.Item>\n                {/* <Menu.Item key=\"2\" danger>\n                    <Button\n                        icon={<ReloadOutlined />}\n                        onClick={() => console.log(\"Update\")}\n                    >\n                        Обновить все данные\n                    </Button>\n                </Menu.Item> */}\n                <Modal\n                    title=\"Создание нового пользователя\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.modal}\n                    confirmLoading={this.state.loading}\n                    onCancel={() => this.setModalVisible(false)}\n                    cancelText=\"Закрыть\"\n                    okText=\"Создать\"\n                    okButtonProps={{\n                        form: \"new-user\",\n                        key: \"submit\",\n                        htmlType: \"submit\",\n                    }}\n                >\n                    <Form\n                        {...layout}\n                        name=\"new-user\"\n                        onFinish={this.onFinish}\n                        ref={this.formRef}\n                    >\n                        <Form.Item\n                            name={[\"user\", \"name\"]}\n                            label=\"Имя\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"user\", \"user_agent\"]}\n                            label=\"UserAgent\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input defaultValue=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.4 Safari/605.1.15\" />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"user\", \"access_token\"]}\n                            label=\"AccessToken\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input defaultValue=\"EAAGNO4a7r2wBADA3DZCUbPoGoBcj2qQXwP5ldqaBCwQ11VmoIRDcZCYWrGBWiTid8s7FZCZAZCXrp0g1dkMu8LwGMZAMaHYRe9uvzY86e0BtH7LJUKsGbSygib6kw3qmQh2oCHGODc7Enwi4o1JRBAnNVDXQMDLfKv96ElM3OWwXQ586wN5L6H\" />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"user\", \"proxy_id\"]}\n                            label=\"Proxy\"\n                            rules={[{ required: true }]}\n                        >\n                            <Select\n                                showSearch\n                                placeholder=\"Выберите прокси\"\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.indexOf(input) >= 0\n                                }\n                            >\n                                {proxies.map((proxy) => {\n                                    console.log(1);\n                                    return (\n                                        <Option value={proxy._id}>\n                                            <span style={{ color: \"green\" }}>\n                                                {proxy.region}\n                                            </span>{\" \"}\n                                            / {proxy.name} / {proxy.ip}:\n                                            {proxy.port} ({proxy.region})\n                                        </Option>\n                                    );\n                                })}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Menu>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        proxies: state.proxies,\n    };\n}\n\nexport default connect(mapStateToProps)(AddUser);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Row, Col, Spin, Button, Popconfirm, message } from \"antd\";\nimport {\n    LoadingOutlined,\n    CloseCircleOutlined,\n    ReloadOutlined,\n} from \"@ant-design/icons\";\n\nimport { store } from \"./../store/store.jsx\";\n\nimport { fetchUsers } from \"./../actions/actionUser.jsx\";\n\nimport axios from \"axios\";\n\nimport settings from \"./../containers/settings\";\nlet url = settings.url;\n\nconst loader = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nclass UsersList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { updateLoaders: {} };\n    }\n    async handleDelete(user) {\n        let res = await axios.get(`${url}/api/users/remove/${user._id}`);\n        if (res.data.success) {\n            store.dispatch(fetchUsers(`${url}/api/users/`));\n        }\n    }\n    async handleUpdate(user) {\n        this.setUpdate_Loaders(user._id, true);\n        let res = await axios.get(`${url}/api/users/${user._id}/update`);\n        console.log(res.data);\n        if (res.data.success) {\n            store.dispatch(fetchUsers(`${url}/api/users/`));\n            message.success(\n                `Обновление пользователя (${user.name}) прошло успешно`\n            );\n        } else if (res.data.err) message.error(res.data.err);\n        console.log(\"Update user\");\n        this.setUpdate_Loaders(user._id, false);\n    }\n    setUpdate_Loaders(index, value) {\n        let updateLoaders = this.state.updateLoaders;\n        updateLoaders[index] = value;\n        this.setState({\n            updateLoaders: updateLoaders,\n        });\n    }\n    usersList = () => {\n        console.log(this.props);\n        let table = [];\n\n        // Outer loop to create parent\n        let users = this.props.users.data;\n        if (users.length) {\n            users.forEach((user) => {\n                table.push(\n                    <Col\n                        className=\"gutter-row\"\n                        span={4}\n                        xxl={4}\n                        xl={6}\n                        lg={6}\n                        md={6}\n                        sm={8}\n                        xs={12}\n                    >\n                        <Card\n                            title={user.name}\n                            extra={<a href=\"#\">Открыть</a>}\n                            style={{ width: 300 }}\n                            actions={[\n                                <Popconfirm\n                                    title=\"Вы уверены?\"\n                                    cancelText=\"Нет\"\n                                    okText=\"Да\"\n                                    icon={\n                                        <CloseCircleOutlined\n                                            style={{ color: \"red\" }}\n                                        />\n                                    }\n                                    onConfirm={() => this.handleDelete(user)}\n                                >\n                                    <Button danger type=\"link\">\n                                        Удалить\n                                    </Button>\n                                </Popconfirm>,\n                                <Popconfirm\n                                    title=\"Вы уверены?\"\n                                    cancelText=\"Нет\"\n                                    okText=\"Да\"\n                                    icon={<ReloadOutlined />}\n                                    onConfirm={() => this.handleUpdate(user)}\n                                >\n                                    <Button\n                                        type=\"link\"\n                                        className=\"link-success\"\n                                        loading={\n                                            this.state.updateLoaders[user._id]\n                                        }\n                                    >\n                                        Обновить\n                                    </Button>\n                                </Popconfirm>,\n                            ]}\n                        >\n                            <div>\n                                <p>Business Managers:</p>\n                                <ul>\n                                    {user.bms.map((bm) => {\n                                        return (\n                                            <li>\n                                                {bm.name}\n                                                {bm.ad_accounts.length > 0 && (\n                                                    <div>\n                                                        <small\n                                                            style={{\n                                                                marginLeft:\n                                                                    \"12px\",\n                                                            }}\n                                                        >\n                                                            Ad Accounts:\n                                                        </small>\n                                                        <ul>\n                                                            {bm.ad_accounts.map(\n                                                                (\n                                                                    ad_account\n                                                                ) => {\n                                                                    return (\n                                                                        <li>\n                                                                            <small>\n                                                                                {\n                                                                                    ad_account.name\n                                                                                }{\" \"}\n                                                                                (\n                                                                                {\n                                                                                    ad_account.account_status_text\n                                                                                }\n\n                                                                                )\n                                                                            </small>\n                                                                        </li>\n                                                                    );\n                                                                }\n                                                            )}\n                                                        </ul>\n                                                    </div>\n                                                )}\n                                                {bm.pages.length > 0 && (\n                                                    <div>\n                                                        <small\n                                                            style={{\n                                                                marginLeft:\n                                                                    \"12px\",\n                                                            }}\n                                                        >\n                                                            Pages:\n                                                        </small>\n                                                        <ul>\n                                                            {bm.pages.map(\n                                                                (page) => {\n                                                                    return (\n                                                                        <li>\n                                                                            <small>\n                                                                                {\n                                                                                    page.name\n                                                                                }\n                                                                            </small>\n                                                                        </li>\n                                                                    );\n                                                                }\n                                                            )}\n                                                        </ul>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            </div>\n                        </Card>\n                    </Col>\n                );\n            });\n        }\n        return table;\n    };\n    render() {\n        console.log(this.props);\n        return (\n            <Spin\n                spinning={this.props.users.isLoading}\n                size=\"large\"\n                indicator={loader}\n                tip=\"Загрузка...\"\n                style={{ fontSize: \"20px\", marginTop: \"25%\" }}\n                alignment=\"middle\"\n            >\n                <Row gutter={12} style={{ padding: \"20px\" }}>\n                    {this.usersList()}\n                </Row>\n            </Spin>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users,\n    };\n}\n\nexport default connect(mapStateToProps)(UsersList);\n","import React from \"react\";\n\nimport UsersFunctions from \"./UsersFunctions.jsx\";\nimport UsersList from \"./UsersList.jsx\";\n\nimport MarkDown from \"./MarkDown.jsx\";\nimport { Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nexport default class Users extends React.Component {\n    render() {\n        return (\n            <Layout>\n                <Header style={{ background: \"#fff\", padding: \"0\" }}>\n                    <UsersFunctions />\n                </Header>\n\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    <UsersList />\n                </Content>\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\n\nimport { Menu, Button } from \"antd\";\n\nimport {\n    LogoutOutlined,\n    UserOutlined,\n    SettingOutlined,\n    HomeOutlined,\n    InteractionOutlined,\n    SolutionOutlined,\n} from \"@ant-design/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default class SideBar extends React.Component {\n    render() {\n        return (\n            <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                style={{ height: \"100%\" }}\n                defaultSelectedKeys={[\"1\"]}\n            >\n                <Menu.Item key=\"1\">\n                    <Link to=\"/home\">\n                        <HomeOutlined />\n                        Главная\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                    <Link to=\"/users\">\n                        <UserOutlined />\n                        Пользователи\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"3\">\n                    <Link to=\"/proxies\">\n                        <InteractionOutlined />\n                        Прокси\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"4\">\n                    <Link to=\"/newcampaign\">\n                        <SolutionOutlined />\n                        Создание компании\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"5\">\n                    <Link to=\"/settings\">\n                        <SettingOutlined />\n                        Настройки\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"6\">\n                    <Link href=\"/logout\">\n                        <LogoutOutlined />\n                        Выйти\n                    </Link>\n                </Menu.Item>\n            </Menu>\n        );\n    }\n}\n","import axios from \"axios\";\nimport * as types from \"./actionTypes.jsx\";\n\nfunction requestProxy() {\n    return { type: types.REQ_PROXY };\n}\n\nfunction receiveProxy(json) {\n    return {\n        type: types.RECV_PROXY,\n        data: json,\n    };\n}\n\nexport function fetchProxies(url) {\n    return function (dispatch) {\n        dispatch(requestProxy());\n        return axios\n            .get(url)\n            .then(function (response) {\n                dispatch(receiveProxy(response.data));\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n    };\n}\n","import settings from \"./../containers/settings\";\n\nimport React from \"react\";\n\nimport { fetchProxies } from \"./../actions/actionProxy.jsx\";\n\nimport { store } from \"./../store/store.jsx\";\n\nimport axios from \"axios\";\n\nimport { Menu, Modal, Button, Select } from \"antd\";\n\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport { Form, Input } from \"antd\";\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nlet url = settings.url;\n\nexport default class AddUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { modal: false, loading: false };\n        this.formRef = React.createRef();\n    }\n    setModalVisible = (modal) => {\n        this.setState({ modal: modal });\n    };\n    setModalLoading = (loading) => {\n        this.setState({ loading: loading });\n    };\n    onFinish = async (values) => {\n        this.setModalLoading(true);\n        let result = await axios.post(`${url}/api/proxies/new`, values.proxy);\n        store.dispatch(fetchProxies(`${url}/api/proxies/`));\n\n        this.setModalLoading(false);\n        this.setModalVisible(false);\n        this.reset();\n    };\n    reset = () => {\n        this.formRef.current.resetFields();\n    };\n    render() {\n        return (\n            <Menu\n                theme=\"light\"\n                mode=\"horizontal\"\n                style={{ lineHeight: \"64px\" }}\n                selectable={false}\n            >\n                <Menu.Item key=\"1\">\n                    <Button\n                        icon={<PlusOutlined />}\n                        onClick={() => this.setModalVisible(true)}\n                    >\n                        Добавить прокси\n                    </Button>\n                </Menu.Item>\n                <Modal\n                    title=\"Добавление прокси\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.modal}\n                    confirmLoading={this.state.loading}\n                    onCancel={() => this.setModalVisible(false)}\n                    cancelText=\"Закрыть\"\n                    okText=\"Создать\"\n                    okButtonProps={{\n                        form: \"new-proxy\",\n                        key: \"submit\",\n                        htmlType: \"submit\",\n                    }}\n                >\n                    <Form\n                        {...layout}\n                        name=\"new-proxy\"\n                        onFinish={this.onFinish}\n                        ref={this.formRef}\n                    >\n                        <Form.Item\n                            name={[\"proxy\", \"name\"]}\n                            label=\"Название\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"proxy\", \"region\"]}\n                            label=\"Регион\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input placeholder=\"US\" />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"proxy\", \"ip\"]}\n                            label=\"IP\"\n                            rules={[{ required: true }]}\n                            help=\"* only http proxies\"\n                        >\n                            <Input placeholder=\"127.0.0.1\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            name={[\"proxy\", \"port\"]}\n                            label=\"PORT\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input placeholder=\"3128\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Menu>\n        );\n    }\n}\n","import settings from \"./../containers/settings\";\n\nimport React from \"react\";\nimport { store } from \"./../store/store.jsx\";\n\nimport { fetchProxies } from \"./../actions/actionProxy.jsx\";\n\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport ProxiesFunctions from \"./ProxiesFunctions\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\n\nimport { Layout, Table, Tag, Popconfirm, Button, message } from \"antd\";\nconst { Header, Content } = Layout;\n\nlet url = settings.url;\n\nlet msg = (type, text) => {\n    switch (type) {\n        case \"success\": {\n            message.success(text);\n            break;\n        }\n        case \"error\": {\n            message.error(text);\n            break;\n        }\n        case \"warning\": {\n            message.warning(text);\n            break;\n        }\n    }\n};\n\nclass Proxies extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { checkLoaders: {} };\n    }\n    dataSource() {\n        return this.props.proxies.data;\n    }\n    columns() {\n        let columns = [\n            {\n                title: \"Название\",\n                dataIndex: \"name\",\n                key: \"name\",\n\n                sorter: (a, b) => a.name.length == b.name.length,\n                sortDirections: [\"descend\", \"ascend\"],\n            },\n            {\n                title: \"Регион\",\n                dataIndex: \"region\",\n                key: \"region\",\n                sorter: (a, b) => a.region.length == b.region.length,\n                sortDirections: [\"descend\", \"ascend\"],\n                render: (region) => (\n                    <span>\n                        <Tag color=\"green\" key={region}>\n                            {region}\n                        </Tag>\n                    </span>\n                ),\n            },\n            {\n                title: \"IP\",\n                dataIndex: \"ip\",\n                key: \"ip\",\n            },\n            {\n                title: \"Port\",\n                key: \"port\",\n                dataIndex: \"port\",\n            },\n            {\n                title: \"Функции\",\n                key: \"action\",\n                render: (text, record) => [\n                    <Popconfirm\n                        title=\"Вы уверены?\"\n                        cancelText=\"Нет\"\n                        okText=\"Да\"\n                        icon={<CloseCircleOutlined style={{ color: \"red\" }} />}\n                        onConfirm={() => this.handleDelete(record)}\n                    >\n                        <Button type=\"link\" danger>\n                            Удалить\n                        </Button>\n                    </Popconfirm>,\n                    <Button\n                        loading={this.state.checkLoaders[record._id]}\n                        type=\"link\"\n                        onClick={() => {\n                            this.handleCheck(record);\n                        }}\n                    >\n                        Проверить\n                    </Button>,\n                ],\n            },\n        ];\n        return columns;\n    }\n    setCheck_Loader(index, value) {\n        let checkLoaders = this.state.checkLoaders;\n        checkLoaders[index] = value;\n        this.setState({\n            loadings: checkLoaders,\n        });\n    }\n    async handleDelete(record) {\n        let res = await axios.get(`${url}/api/proxies/remove/${record._id}`);\n        if (res.data.success) {\n            store.dispatch(fetchProxies(`${url}/api/proxies/`));\n        }\n    }\n    async handleCheck(record) {\n        this.setCheck_Loader(record._id, true);\n        console.log(record);\n        let checkStatus = await axios.get(\n            `${url}/api/proxies/${record._id}/check`\n        );\n        checkStatus = checkStatus.data;\n        if (checkStatus.success) {\n            msg(\n                \"success\",\n                `Проверка прокси (${checkStatus.proxy.name}) прошла успешно`\n            );\n        } else if (checkStatus.err) {\n            msg(\"error\", checkStatus.err);\n        }\n        this.setCheck_Loader(record._id, false);\n    }\n    render() {\n        return (\n            <Layout>\n                <Header style={{ background: \"#fff\", padding: 0 }}>\n                    <ProxiesFunctions />\n                </Header>\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    <Table\n                        dataSource={this.dataSource()}\n                        columns={this.columns()}\n                    />\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        proxies: state.proxies,\n    };\n}\n\nexport default connect(mapStateToProps)(Proxies);\n","import React from \"react\";\nimport settings from \"./../containers/settings\";\n\nimport {\n    Layout,\n    Menu,\n    Modal,\n    Button,\n    Select,\n    Form,\n    Input,\n    Spin,\n    Row,\n    Col,\n    Result,\n    Timeline,\n    Alert,\n    message,\n} from \"antd\";\nimport {\n    LoadingOutlined,\n    SmileOutlined,\n    PlusOutlined,\n    MinusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nlet url = settings.url;\n\nconsole.log(\"SETTING URL: \" + url);\n\nconst { Header, Content } = Layout;\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst loader = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nclass createCampaign extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {\n            loading: false,\n            visibleModal: false,\n            is_proxy_available: false,\n            user: null,\n            isUserSelected: false,\n            isAdAccountSelected: false,\n            ad_account_id: null,\n            confirmLoading: false,\n            life_events: [],\n            pixels: [],\n        };\n    }\n\n    async load_life_events(user_id) {\n        let res = await axios.get(\n            `${url}/api/fb/targeting/category/life-events/${user_id}`\n        );\n        if (res.data) {\n            this.setState({\n                life_events: res.data.data,\n            });\n        }\n    }\n\n    setModalVisible = (status) => {\n        this.setState({\n            visibleModal: status,\n        });\n    };\n\n    handleCancel = (e) => {\n        this.setState({\n            visibleModal: false,\n        });\n    };\n    userSelected(user_id) {\n        let user;\n\n        this.props.users.data.forEach((item) => {\n            if (item._id == user_id) user = item;\n        });\n\n        if (user) {\n            this.setState({\n                user: user,\n                isUserSelected: true,\n            });\n            this.load_life_events(user_id);\n        }\n    }\n    async onFinish(formData) {\n        let campaign = formData.campaign;\n\n        console.log(formData);\n        this.setModalLoading(true);\n        let res = await axios.get(\n            `${url}/api/proxies/${this.state.user.proxy_id}/check`\n        );\n        if (res.data.success) {\n            message.success(`Проверка прокси прошла успешно`);\n            campaign.proxy_id = this.state.user.proxy_id;\n            let create_campaign_document = await axios.post(\n                `${url}/api/campaigns/new`,\n                campaign\n            );\n            let data = create_campaign_document.data;\n            if (data.success) {\n                message.success(`Компания (ID: ${data.id}) успешна создана`);\n                console.log({\n                    user_id: this.state.user._id,\n                    proxy_id: this.state.user.proxy_id,\n                    adsets: formData.adsets,\n                    campaign: {\n                        id: data.id,\n                        pixel_id: campaign.campaign_pixel_id,\n                        custom_event_type: campaign.custom_event_type,\n                    },\n                });\n                let createAdSets_document = await axios.post(\n                    `${url}/api/adsets/create`,\n                    {\n                        user_id: this.state.user._id,\n                        proxy_id: this.state.user.proxy_id,\n                        adsets: formData.adsets,\n                        campaign: {\n                            id: data.id,\n                            ad_account_id: campaign.ad_account_id,\n                            pixel_id: campaign.campaign_pixel_id,\n                            custom_event_type:\n                                campaign.campaign_custom_event_type,\n                        },\n                    }\n                );\n\n                if (createAdSets_document.data.success) {\n                    message.success(\n                        `Успешно создано ${createAdSets_document.data.success_adsets} адсетов`\n                    );\n                    this.setModalLoading(false);\n                    this.setModalVisible(false);\n                    this.resetForm();\n                } else {\n                    message.error(\"Произошла ошибка при создании адсетов\");\n                }\n            } else if (data.err) {\n                message.error(data.err);\n            }\n        } else if (res.data.err) {\n            message.error(res.data.err);\n        }\n        this.setModalLoading(false);\n    }\n\n    setModalLoading = (loading) => {\n        this.setState({ confirmLoading: loading });\n    };\n    resetForm = () => {\n        this.setState({\n            user: null,\n            isUserSelected: false,\n            isAdAccountSelected: false,\n        });\n        this.formRef.current.resetFields();\n    };\n    render() {\n        return (\n            <Layout>\n                {/* <Header style={{ background: \"#fff\", padding: 0 }}></Header> */}\n\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    <Result\n                        style={{ marginTop: \"5%\" }}\n                        icon={<SmileOutlined />}\n                        title=\"Давайте попробуем создать компанию!\"\n                        extra={\n                            <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                    this.setModalVisible(true);\n                                }}\n                            >\n                                Создать\n                            </Button>\n                        }\n                    />\n\n                    <Modal\n                        title=\"Создание компании\"\n                        visible={this.state.visibleModal}\n                        onCancel={this.handleCancel}\n                        okButtonProps={{\n                            form: \"new-campaign\",\n                            key: \"submit\",\n                            htmlType: \"submit\",\n                        }}\n                        confirmLoading={this.state.confirmLoading}\n                        cancelText=\"Закрыть\"\n                        okText=\"Создать\"\n                    >\n                        <Form\n                            name=\"new-campaign\"\n                            onFinish={(formData) => this.onFinish(formData)}\n                            ref={this.formRef}\n                            {...layout}\n                        >\n                            <Form.Item\n                                name={[\"campaign\", \"user_id\"]}\n                                label=\"Пользователь\"\n                                rules={[{ required: true }]}\n                            >\n                                {this.users_list()}\n                            </Form.Item>\n                            <Form.Item\n                                name={[\"campaign\", \"ad_account_id\"]}\n                                label=\"Рекламный аккаунт\"\n                                rules={[{ required: true }]}\n                                style={\n                                    this.state.isUserSelected == true\n                                        ? {}\n                                        : { display: \"none\" }\n                                }\n                            >\n                                {this.ad_accounts_list()}\n                            </Form.Item>\n\n                            {this.compaign_sector()}\n                            {this.adsets_sector()}\n                        </Form>\n                    </Modal>\n                </Content>\n\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n    users_list() {\n        let users = this.props.users.data;\n        if (users) {\n            if (users.length) {\n                return (\n                    <Select\n                        showSearch\n                        placeholder=\"Выберите пользователя\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) =>\n                            option.children.indexOf(input) >= 0\n                        }\n                        onChange={(value) => this.userSelected(value)}\n                    >\n                        {users.map((user) => {\n                            return (\n                                <Option value={user._id}>{user.name}</Option>\n                            );\n                        })}\n                    </Select>\n                );\n            }\n        }\n    }\n    ad_accounts_list() {\n        if (this.state.user) {\n            return (\n                <Select\n                    showSearch\n                    placeholder=\"Выберите рекламный аккаунт\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.children.indexOf(input) >= 0\n                    }\n                    onChange={(value) => this.ad_account_Selected(value)}\n                >\n                    {this.state.user.bms.map((bm) => {\n                        return bm.ad_accounts.map((ad_account) => {\n                            return (\n                                <Option value={ad_account.account_id}>\n                                    {ad_account.name}\n                                </Option>\n                            );\n                        });\n                    })}\n                </Select>\n            );\n        } else return <div></div>;\n    }\n    ad_account_Selected(value) {\n        this.setState({\n            isAdAccountSelected: true,\n            ad_account_id: value,\n        });\n        this.loadPixels(value);\n    }\n    async loadPixels(ad_account_id) {\n        let res = await axios.get(\n            `${url}/api/pixels/list/${this.state.user._id}/${ad_account_id}`\n        );\n\n        if (res.data) {\n            this.setState({\n                pixels: res.data.data,\n            });\n        }\n    }\n    compaign_sector() {\n        if (this.state.isAdAccountSelected) {\n            return [\n                <Alert\n                    message=\"Данные компании\"\n                    type=\"info\"\n                    showIcon\n                    style={{ marginBottom: \"20px\" }}\n                />,\n                ,\n                <Form.Item\n                    label=\"Campaign Name\"\n                    name={[\"campaign\", \"campaign_name\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Input />\n                </Form.Item>,\n                <Form.Item\n                    label=\"Buying Type\"\n                    name={[\"campaign\", \"campaign_buying_type\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Select>\n                        <Option value=\"AUCTION\">AUCTION</Option>\n                    </Select>\n                </Form.Item>,\n                <Form.Item\n                    label=\"Objective\"\n                    name={[\"campaign\", \"campaign_objective\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Select>\n                        <Option value=\"CONVERSIONS\">CONVERSIONS</Option>\n                    </Select>\n                </Form.Item>,\n                <Form.Item\n                    label=\"Status\"\n                    name={[\"campaign\", \"campaign_status\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Select>\n                        <Option value=\"PAUSED\">PAUSED</Option>\n                    </Select>\n                </Form.Item>,\n                <Form.Item\n                    label=\"Special Ad Category\"\n                    name={[\"campaign\", \"campaign_special_ad_category\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Select>\n                        <Option value=\"NONE\" default>\n                            NONE\n                        </Option>\n                    </Select>\n                </Form.Item>,\n                <Form.Item\n                    label=\"Pixel\"\n                    name={[\"campaign\", \"campaign_pixel_id\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Select>\n                        {this.state.pixels.map((pixel, index) => (\n                            <Option value={pixel.id}>\n                                {pixel.name} (id: {pixel.id})\n                            </Option>\n                        ))}\n                    </Select>\n                </Form.Item>,\n                <Form.Item\n                    label=\"Pixel Event Type\"\n                    name={[\"campaign\", \"campaign_custom_event_type\"]}\n                    rules={[{ required: true }]}\n                >\n                    <Select>\n                        <Option value=\"LEAD\">LEAD</Option>\n                    </Select>\n                </Form.Item>,\n            ];\n        }\n    }\n    adsets_sector() {\n        if (this.state.isAdAccountSelected) {\n            return [\n                <Alert\n                    message=\"Раздел adsets\"\n                    type=\"info\"\n                    showIcon\n                    style={{ marginBottom: \"20px\" }}\n                />,\n                <Form.List name=\"adsets\" style={{ width: \"100%\" }}>\n                    {(fields, { add, remove }) => {\n                        /**\n                         * `fields` internal fill with `name`, `key`, `fieldKey` props.\n                         * You can extends this into sub field to support multiple dynamic fields.\n                         */\n                        return (\n                            <div>\n                                <Button\n                                    type=\"dashed\"\n                                    onClick={() => {\n                                        add();\n                                    }}\n                                    style={{\n                                        width: \"100%\",\n                                        marginBottom: \"10px\",\n                                    }}\n                                >\n                                    <PlusOutlined /> Добавить adset\n                                </Button>\n                                {fields.map((field, index) => (\n                                    <div\n                                        style={{\n                                            padding: \"20px 20px 0 20px\",\n                                            border: \"1px solid #91d5ff\",\n                                            marginTop: \"10px\",\n                                        }}\n                                        className=\"asset-block\"\n                                    >\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name={[field.name, \"name\"]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[field.fieldKey, \"name\"]}\n                                        >\n                                            <Input />\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Destination Type\"\n                                            name={[\n                                                field.name,\n                                                \"destination_type\",\n                                            ]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[\n                                                field.fieldKey,\n                                                \"destination_type\",\n                                            ]}\n                                        >\n                                            <Select>\n                                                <Option value=\"MESSENGER\">\n                                                    MESSENGER\n                                                </Option>\n                                            </Select>\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Daily Budget\"\n                                            name={[field.name, \"daily_budget\"]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[\n                                                field.fieldKey,\n                                                \"daily_budget\",\n                                            ]}\n                                        >\n                                            <Input />\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Geo Locations\"\n                                            name={[field.name, \"geo_locations\"]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[\n                                                field.fieldKey,\n                                                \"geo_locations\",\n                                            ]}\n                                        >\n                                            <Select>\n                                                <Option value=\"US\">US</Option>\n                                            </Select>\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Life Events\"\n                                            name={[field.name, \"life_events\"]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[\n                                                field.fieldKey,\n                                                \"life_events\",\n                                            ]}\n                                        >\n                                            <Select>\n                                                {this.state.life_events.map(\n                                                    (event, index) => (\n                                                        <Option\n                                                            value={event.id}\n                                                        >\n                                                            {event.name}\n                                                        </Option>\n                                                    )\n                                                )}\n                                            </Select>\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Status\"\n                                            name={[field.name, \"status\"]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[\n                                                field.fieldKey,\n                                                \"status\",\n                                            ]}\n                                        >\n                                            <Select>\n                                                <Option value=\"PAUSED\">\n                                                    PAUSED\n                                                </Option>\n                                            </Select>\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            label=\"Окно конверсии\"\n                                            name={[field.name, \"window_days\"]}\n                                            rules={[{ required: true }]}\n                                            fieldKey={[\n                                                field.fieldKey,\n                                                \"window_days\",\n                                            ]}\n                                        >\n                                            <Select>\n                                                <Option value=\"1\">\n                                                    1 день после клика\n                                                </Option>\n                                                <Option value=\"7\">\n                                                    7 дней после клика\n                                                </Option>\n                                            </Select>\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            style={{ marginBottom: \"20px\" }}\n                                        >\n                                            <Button\n                                                style={{\n                                                    fontSize: \"10px\",\n                                                }}\n                                                type=\"link\"\n                                                danger\n                                                onClick={() => {\n                                                    remove(field.name);\n                                                }}\n                                            >\n                                                Удалить\n                                            </Button>\n                                        </Form.Item>\n                                    </div>\n                                ))}\n                            </div>\n                        );\n                    }}\n                </Form.List>,\n            ];\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users,\n        proxies: state.proxies,\n    };\n}\n\nexport default connect(mapStateToProps)(createCampaign);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./../components/Home.jsx\";\nimport Settings from \"./../components/Settings.jsx\";\nimport Users from \"./../components/Users.jsx\";\nimport SideBar from \"./../components/SideBar.jsx\";\nimport Proxies from \"./../components/Proxies\";\nimport createCampaign from \"./../components/createCampaign\";\n\nimport { connect } from \"react-redux\";\n\nimport { Layout } from \"antd\";\nconst { Sider } = Layout;\n\nclass WebPage extends React.Component {\n    test() {\n        console.log(this.props.config);\n    }\n    render() {\n        return (\n            <Router>\n                <Layout style={{ height: \"100%\" }}>\n                    <Sider\n                        breakpoint=\"lg\"\n                        collapsedWidth=\"0\"\n                        onCollapse={(collapsed, type) => {\n                            console.log(collapsed, type);\n                        }}\n                        stype={{ position: \"fixed\" }}\n                    >\n                        <SideBar />\n                    </Sider>\n                    <Route exact path=\"/home\" component={Home} />\n\n                    <Route path=\"/users\" component={Users} />\n                    <Route path=\"/proxies\" component={Proxies} />\n                    <Route path=\"/newcampaign\" component={createCampaign} />\n                    <Route path=\"/settings\" component={Settings} />\n                </Layout>\n            </Router>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        config: state.config,\n        files: state.files,\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(WebPage);\n","import settings from \"./containers/settings\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store.jsx\";\n\nimport WebPage from \"./containers/WebPage.jsx\";\n\nimport \"./index.css\";\n\nimport { fetchProxies } from \"./actions/actionProxy.jsx\";\nimport { fetchUsers } from \"./actions/actionUser.jsx\";\n\nlet app = document.getElementById(\"root\");\n\nlet url = settings.url;\n\nfunction loadData() {\n    store.dispatch(fetchProxies(`${url}/api/proxies`));\n    store.dispatch(fetchUsers(`${url}/api/users`));\n}\n\nclass App extends React.Component {\n    componentDidMount() {\n        loadData();\n        console.log(\"Loading data...\");\n    }\n    render() {\n        return (\n            <Provider store={store}>\n                <WebPage />\n            </Provider>\n        );\n    }\n}\n\nReactDOM.render(<App />, app);\n"],"sourceRoot":""}