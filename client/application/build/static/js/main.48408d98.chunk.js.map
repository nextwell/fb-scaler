{"version":3,"sources":["containers/settings.jsx","store/reducers/user.jsx","actions/actionTypes.jsx","store/reducers/proxy.jsx","store/reducers/index.jsx","store/store.jsx","components/MarkDown.jsx","components/Home.jsx","components/Settings.jsx","actions/actionUser.jsx","components/UsersFunctions.jsx","components/UsersList.jsx","components/Users.jsx","components/SideBar.jsx","actions/actionProxy.jsx","components/ProxiesFunctions.jsx","components/Proxies.jsx","containers/WebPage.jsx","index.jsx"],"names":["settings","url","userReducer","state","isLoading","data","error","action","type","Object","assign","proxyReducer","proxyId","updatedData","filter","proxy","_id","allReducers","combineReducers","users","UserReducers","proxies","ProxyReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","AllReducers","applyMiddleware","thunk","Footer","Layout","Content","React","Component","Header","Home","style","margin","height","overflowY","Settings","background","fetchUsers","dispatch","axios","get","then","response","catch","console","log","Option","Select","layout","labelCol","span","wrapperCol","AddUser","props","setModalVisible","modal","setState","setModalLoading","loading","onFinish","values","a","post","user","reset","formRef","current","resetFields","createRef","this","theme","mode","lineHeight","selectable","Item","key","icon","PlusOutlined","onClick","title","wrapClassName","visible","confirmLoading","onCancel","cancelText","okText","okButtonProps","form","htmlType","name","ref","label","rules","required","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","indexOf","map","value","color","region","ip","port","connect","loader","LoadingOutlined","fontSize","spin","UsersList","usersList","table","length","forEach","push","className","xxl","xl","lg","md","sm","xs","extra","href","width","actions","CloseCircleOutlined","onConfirm","handleDelete","danger","bms","bm","ad_accounts","marginLeft","ad_account","account_status_text","pages","page","success","spinning","size","indicator","tip","marginTop","alignment","gutter","padding","Users","UsersFunctions","SideBar","defaultSelectedKeys","to","HomeOutlined","UserOutlined","InteractionOutlined","SettingOutlined","LogoutOutlined","fetchProxies","help","Proxies","columns","dataIndex","sorter","b","sortDirections","render","text","record","dataSource","Sider","WebPage","config","breakpoint","collapsedWidth","onCollapse","collapsed","stype","position","exact","path","component","files","app","document","getElementById","App","ReactDOM"],"mappings":"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","file":"static/js/main.48408d98.chunk.js","sourcesContent":["let settings = {\n    url: \"\",\n};\n\n//console.log(process.env);\n\nif (process.env.NODE_ENV === \"development\") {\n    console.log(\"DEVELOP MODE\");\n    settings.url = \"http://localhost:8080\";\n}\n\nexport default settings;\n","import * as types from './../../actions/actionTypes.jsx';\n\n\nfunction userReducer(state = {\n\tisLoading: false,\n\tdata: {},\n\terror: false}\n, action = null) {\n\tswitch(action.type) {\n\t\tcase types.RECV_USER:\n\t\t\treturn Object.assign({}, state, {isLoading: false, data: action.data, error: false });\n\t\tcase types.REQ_USER:\n\t\t\treturn Object.assign({}, state, {isLoading: true, error: false });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n\nexport default userReducer;","export const REQ_PROXY = \"REQ_PROXY\";\nexport const RECV_PROXY = \"RECV_PROXY\";\nexport const REQ_PROXY_DELETE = \"REQ_PROXY_DELETE\";\n\nexport const REQ_USER = \"REQ_USER\";\nexport const RECV_USER = \"RECV_USER\";\n","import * as types from \"./../../actions/actionTypes.jsx\";\n\nfunction proxyReducer(\n    state = {\n        isLoading: false,\n        data: [],\n        error: false,\n    },\n    action = null\n) {\n    switch (action.type) {\n        case types.RECV_PROXY:\n            return Object.assign({}, state, {\n                isLoading: false,\n                data: action.data,\n                error: false,\n            });\n        case types.REQ_PROXY:\n            return Object.assign({}, state, { isLoading: true, error: false });\n        case types.REQ_PROXY_DELETE: {\n            const proxyId = action.data;\n            let updatedData = state.data.filter(\n                (proxy) => proxy._id !== proxyId\n            );\n\n            return Object.assign({}, state, {\n                isLoading: true,\n                data: updatedData,\n                error: false,\n            });\n        }\n        default:\n            return state;\n    }\n}\n\nexport default proxyReducer;\n","import { combineReducers } from \"redux\";\nimport UserReducers from \"./user.jsx\";\nimport ProxyReducers from \"./proxy.jsx\";\n\nconst allReducers = combineReducers({\n    users: UserReducers,\n    proxies: ProxyReducers,\n});\n\nexport default allReducers;\n","import {createStore, applyMiddleware, compose} from 'redux';\n\nimport AllReducers from './reducers/index.jsx';\n\n\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(AllReducers, composeEnhancers(\n  applyMiddleware(thunk)));\n\n\n\nexport { store };","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nconst { Footer } = Layout;\n\nexport default class MarkDown extends React.Component {\n    render() {\n        return (\n            <Footer style={{ textAlign: \"center\" }}>\n                Scaler 2020 Created by Vladimir N.\n            </Footer>\n        );\n    }\n}\n","import React from \"react\";\n\nimport MarkDown from \"./MarkDown.jsx\";\nimport { Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <Layout>\n                {/* <Header style={{ background: \"#fff\", padding: 0 }}></Header> */}\n\n                <Content\n                    style={{\n                        margin: \"24px 16px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                ></Content>\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\n\nimport MarkDown from \"./MarkDown.jsx\";\nimport { Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nexport default class Settings extends React.Component {\n    render() {\n        return (\n            <Layout>\n                {/* <Header style={{ background: \"#fff\", padding: 0 }}></Header> */}\n\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    В разработке\n                </Content>\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n}\n","import * as types from \"./actionTypes.jsx\";\nimport axios from \"axios\";\n\nfunction requestUser() {\n    return { type: types.REQ_USER };\n}\n\nfunction receiveUser(json) {\n    return {\n        type: types.RECV_USER,\n        data: json,\n    };\n}\n\nexport function fetchUsers(url) {\n    return function (dispatch) {\n        dispatch(requestUser());\n        return axios\n            .get(url)\n            .then(function (response) {\n                dispatch(receiveUser(response.data));\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n    };\n}\n","import settings from \"./../containers/settings\";\n\nimport React from \"react\";\n\nimport { store } from \"../store/store.jsx\";\n\nimport { fetchUsers } from \"./../actions/actionUser.jsx\";\n\nimport axios from \"axios\";\n\nimport { connect } from \"react-redux\";\n\nimport { Menu, Modal, Button, Select } from \"antd\";\n\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport { Form, Input } from \"antd\";\nconst { Option } = Select;\n\nlet url = settings.url;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nclass AddUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { modal: false, loading: false };\n        this.formRef = React.createRef();\n    }\n    setModalVisible = (modal) => {\n        this.setState({ modal: modal });\n    };\n    setModalLoading = (loading) => {\n        this.setState({ loading: loading });\n    };\n    onFinish = async (values) => {\n        this.setModalLoading(true);\n        let result = await axios.post(`${url}/api/users/new`, values.user);\n        store.dispatch(fetchUsers(`${url}/api/users/`));\n\n        this.setModalLoading(false);\n        this.setModalVisible(false);\n        this.reset();\n    };\n    reset = () => {\n        this.formRef.current.resetFields();\n    };\n    render() {\n        let proxies = this.props.proxies.data;\n        console.log(proxies);\n        return (\n            <Menu\n                theme=\"light\"\n                mode=\"horizontal\"\n                style={{ lineHeight: \"64px\" }}\n                selectable={false}\n            >\n                <Menu.Item key=\"1\">\n                    <Button\n                        icon={<PlusOutlined />}\n                        onClick={() => this.setModalVisible(true)}\n                    >\n                        Добавить пользователя\n                    </Button>\n                </Menu.Item>\n                <Modal\n                    title=\"Создание нового пользователя\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.modal}\n                    confirmLoading={this.state.loading}\n                    onCancel={() => this.setModalVisible(false)}\n                    cancelText=\"Закрыть\"\n                    okText=\"Создать\"\n                    okButtonProps={{\n                        form: \"new-user\",\n                        key: \"submit\",\n                        htmlType: \"submit\",\n                    }}\n                >\n                    <Form\n                        {...layout}\n                        name=\"new-user\"\n                        onFinish={this.onFinish}\n                        ref={this.formRef}\n                    >\n                        <Form.Item\n                            name={[\"user\", \"name\"]}\n                            label=\"Имя\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"user\", \"user_agent\"]}\n                            label=\"UserAgent\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"user\", \"access_token\"]}\n                            label=\"AccessToken\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"user\", \"proxy_id\"]}\n                            label=\"Proxy\"\n                            rules={[{ required: true }]}\n                        >\n                            <Select\n                                showSearch\n                                placeholder=\"Выберите прокси\"\n                                optionFilterProp=\"children\"\n                                filterOption={(input, option) =>\n                                    option.children.indexOf(input) >= 0\n                                }\n                            >\n                                {proxies.map((proxy) => {\n                                    console.log(1);\n                                    return (\n                                        <Option value={proxy._id}>\n                                            <span style={{ color: \"green\" }}>\n                                                {proxy.region}\n                                            </span>{\" \"}\n                                            / {proxy.name} / {proxy.ip}:\n                                            {proxy.port} ({proxy.region})\n                                        </Option>\n                                    );\n                                })}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Menu>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        proxies: state.proxies,\n    };\n}\n\nexport default connect(mapStateToProps)(AddUser);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Row, Col, Spin, Button, Popconfirm } from \"antd\";\nimport { LoadingOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\n\nimport { store } from \"./../store/store.jsx\";\n\nimport { fetchUsers } from \"./../actions/actionUser.jsx\";\n\nimport axios from \"axios\";\n\nimport settings from \"./../containers/settings\";\nlet url = settings.url;\n\nconst loader = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nclass UsersList extends React.Component {\n    async handleDelete(user) {\n        let res = await axios.get(`${url}/api/users/remove/${user._id}`);\n        if (res.data.success) {\n            store.dispatch(fetchUsers(`${url}/api/users/`));\n        }\n    }\n    usersList = () => {\n        console.log(this.props);\n        let table = [];\n\n        // Outer loop to create parent\n        let users = this.props.users.data;\n        if (users.length) {\n            users.forEach((user) => {\n                table.push(\n                    <Col\n                        className=\"gutter-row\"\n                        span={4}\n                        xxl={4}\n                        xl={6}\n                        lg={6}\n                        md={6}\n                        sm={8}\n                        xs={12}\n                    >\n                        <Card\n                            title={user.name}\n                            extra={<a href=\"#\">Открыть</a>}\n                            style={{ width: 300 }}\n                            actions={[\n                                <Popconfirm\n                                    title=\"Вы уверены?\"\n                                    cancelText=\"Нет\"\n                                    okText=\"Да\"\n                                    icon={\n                                        <CloseCircleOutlined\n                                            style={{ color: \"red\" }}\n                                        />\n                                    }\n                                    onConfirm={() => this.handleDelete(user)}\n                                >\n                                    <Button type=\"link\" danger>\n                                        Удалить\n                                    </Button>\n                                </Popconfirm>,\n                            ]}\n                        >\n                            <div>\n                                <p>Business Managers:</p>\n                                <ul>\n                                    {user.bms.map((bm) => {\n                                        return (\n                                            <li>\n                                                {bm.name}\n                                                {bm.ad_accounts.length > 0 && (\n                                                    <div>\n                                                        <small\n                                                            style={{\n                                                                marginLeft:\n                                                                    \"12px\",\n                                                            }}\n                                                        >\n                                                            Ad Accounts:\n                                                        </small>\n                                                        <ul>\n                                                            {bm.ad_accounts.map(\n                                                                (\n                                                                    ad_account\n                                                                ) => {\n                                                                    return (\n                                                                        <li>\n                                                                            <small>\n                                                                                {\n                                                                                    ad_account.name\n                                                                                }{\" \"}\n                                                                                (\n                                                                                {\n                                                                                    ad_account.account_status_text\n                                                                                }\n\n                                                                                )\n                                                                            </small>\n                                                                        </li>\n                                                                    );\n                                                                }\n                                                            )}\n                                                        </ul>\n                                                    </div>\n                                                )}\n                                                {bm.pages.length > 0 && (\n                                                    <div>\n                                                        <small\n                                                            style={{\n                                                                marginLeft:\n                                                                    \"12px\",\n                                                            }}\n                                                        >\n                                                            Pages:\n                                                        </small>\n                                                        <ul>\n                                                            {bm.pages.map(\n                                                                (page) => {\n                                                                    return (\n                                                                        <li>\n                                                                            <small>\n                                                                                {\n                                                                                    page.name\n                                                                                }\n                                                                            </small>\n                                                                        </li>\n                                                                    );\n                                                                }\n                                                            )}\n                                                        </ul>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            </div>\n                        </Card>\n\n                        {/* <Card\n                            hoverable\n                            style={{\n                                marginBottom: \"10px\",\n                                padding: \"10px\",\n                            }}\n                            cover={\n                                <UserOutlined\n                                    style={{\n                                        fontSize: \"40px\",\n                                        paddingTop: \"15px\",\n                                    }}\n                                />\n                            }\n                        >\n                            <Meta\n                                title={user.name}\n                                // description=\"Description about account\"\n                            />\n                        </Card> */}\n                    </Col>\n                );\n            });\n        }\n        return table;\n    };\n    render() {\n        console.log(this.props);\n        return (\n            <Spin\n                spinning={this.props.users.isLoading}\n                size=\"large\"\n                indicator={loader}\n                tip=\"Загрузка...\"\n                style={{ fontSize: \"20px\", marginTop: \"25%\" }}\n                alignment=\"middle\"\n            >\n                <Row gutter={12} style={{ padding: \"20px\" }}>\n                    {this.usersList()}\n                </Row>\n            </Spin>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        users: state.users,\n    };\n}\n\nexport default connect(mapStateToProps)(UsersList);\n","import React from \"react\";\n\nimport UsersFunctions from \"./UsersFunctions.jsx\";\nimport UsersList from \"./UsersList.jsx\";\n\nimport MarkDown from \"./MarkDown.jsx\";\nimport { Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nexport default class Users extends React.Component {\n    render() {\n        return (\n            <Layout>\n                <Header style={{ background: \"#fff\", padding: \"0\" }}>\n                    <UsersFunctions />\n                </Header>\n\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    <UsersList />\n                </Content>\n                {/* <MarkDown /> */}\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\n\nimport { Menu, Button } from \"antd\";\n\nimport {\n    LogoutOutlined,\n    UserOutlined,\n    SettingOutlined,\n    HomeOutlined,\n    InteractionOutlined,\n} from \"@ant-design/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default class SideBar extends React.Component {\n    render() {\n        return (\n            <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                style={{ height: \"100%\" }}\n                defaultSelectedKeys={[\"1\"]}\n            >\n                <Menu.Item key=\"1\">\n                    <Link to=\"/home\">\n                        <HomeOutlined />\n                        Главная\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                    <Link to=\"/users\">\n                        <UserOutlined />\n                        Пользователи\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"3\">\n                    <Link to=\"/proxies\">\n                        <InteractionOutlined />\n                        Прокси\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"4\">\n                    <Link to=\"/settings\">\n                        <SettingOutlined />\n                        Настройки\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"5\">\n                    <Link href=\"/logout\">\n                        <LogoutOutlined />\n                        Выйти\n                    </Link>\n                </Menu.Item>\n            </Menu>\n        );\n    }\n}\n","import axios from \"axios\";\nimport * as types from \"./actionTypes.jsx\";\n\nfunction requestProxy() {\n    return { type: types.REQ_PROXY };\n}\n\nfunction receiveProxy(json) {\n    return {\n        type: types.RECV_PROXY,\n        data: json,\n    };\n}\n\nexport function fetchProxies(url) {\n    return function (dispatch) {\n        dispatch(requestProxy());\n        return axios\n            .get(url)\n            .then(function (response) {\n                dispatch(receiveProxy(response.data));\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n    };\n}\n","import settings from \"./../containers/settings\";\n\nimport React from \"react\";\n\nimport { fetchProxies } from \"./../actions/actionProxy.jsx\";\n\nimport { store } from \"./../store/store.jsx\";\n\nimport axios from \"axios\";\n\nimport { Menu, Modal, Button, Select } from \"antd\";\n\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport { Form, Input } from \"antd\";\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nlet url = settings.url;\n\nexport default class AddUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { modal: false, loading: false };\n        this.formRef = React.createRef();\n    }\n    setModalVisible = (modal) => {\n        this.setState({ modal: modal });\n    };\n    setModalLoading = (loading) => {\n        this.setState({ loading: loading });\n    };\n    onFinish = async (values) => {\n        this.setModalLoading(true);\n        let result = await axios.post(`${url}/api/proxies/new`, values.proxy);\n        store.dispatch(fetchProxies(`${url}/api/proxies/`));\n\n        this.setModalLoading(false);\n        this.setModalVisible(false);\n        this.reset();\n    };\n    reset = () => {\n        this.formRef.current.resetFields();\n    };\n    render() {\n        return (\n            <Menu\n                theme=\"light\"\n                mode=\"horizontal\"\n                style={{ lineHeight: \"64px\" }}\n                selectable={false}\n            >\n                <Menu.Item key=\"1\">\n                    <Button\n                        icon={<PlusOutlined />}\n                        onClick={() => this.setModalVisible(true)}\n                    >\n                        Добавить прокси\n                    </Button>\n                </Menu.Item>\n                <Modal\n                    title=\"Добавление прокси\"\n                    wrapClassName=\"vertical-center-modal\"\n                    visible={this.state.modal}\n                    confirmLoading={this.state.loading}\n                    onCancel={() => this.setModalVisible(false)}\n                    cancelText=\"Закрыть\"\n                    okText=\"Создать\"\n                    okButtonProps={{\n                        form: \"new-proxy\",\n                        key: \"submit\",\n                        htmlType: \"submit\",\n                    }}\n                >\n                    <Form\n                        {...layout}\n                        name=\"new-proxy\"\n                        onFinish={this.onFinish}\n                        ref={this.formRef}\n                    >\n                        <Form.Item\n                            name={[\"proxy\", \"name\"]}\n                            label=\"Название\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"proxy\", \"region\"]}\n                            label=\"Регион\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input placeholder=\"US\" />\n                        </Form.Item>\n                        <Form.Item\n                            name={[\"proxy\", \"ip\"]}\n                            label=\"IP\"\n                            rules={[{ required: true }]}\n                            help=\"* only http proxies\"\n                        >\n                            <Input placeholder=\"127.0.0.1\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            name={[\"proxy\", \"port\"]}\n                            label=\"PORT\"\n                            rules={[{ required: true }]}\n                        >\n                            <Input placeholder=\"3128\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Menu>\n        );\n    }\n}\n","import settings from \"./../containers/settings\";\n\nimport React from \"react\";\nimport { store } from \"./../store/store.jsx\";\n\nimport { fetchProxies } from \"./../actions/actionProxy.jsx\";\n\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport ProxiesFunctions from \"./ProxiesFunctions\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\n\nimport { Layout, Table, Tag, Popconfirm, Button } from \"antd\";\nconst { Header, Content } = Layout;\n\nlet url = settings.url;\n\nclass Proxies extends React.Component {\n    dataSource() {\n        return this.props.proxies.data;\n    }\n    columns() {\n        let columns = [\n            {\n                title: \"Название\",\n                dataIndex: \"name\",\n                key: \"name\",\n\n                sorter: (a, b) => a.name.length == b.name.length,\n                sortDirections: [\"descend\", \"ascend\"],\n            },\n            {\n                title: \"Регион\",\n                dataIndex: \"region\",\n                key: \"region\",\n                sorter: (a, b) => a.region.length == b.region.length,\n                sortDirections: [\"descend\", \"ascend\"],\n                render: (region) => (\n                    <span>\n                        <Tag color=\"green\" key={region}>\n                            {region}\n                        </Tag>\n                    </span>\n                ),\n            },\n            {\n                title: \"IP\",\n                dataIndex: \"ip\",\n                key: \"ip\",\n            },\n            {\n                title: \"Port\",\n                key: \"port\",\n                dataIndex: \"port\",\n            },\n            {\n                title: \"Функции\",\n                key: \"action\",\n                render: (text, record) => (\n                    <Popconfirm\n                        title=\"Вы уверены?\"\n                        cancelText=\"Нет\"\n                        okText=\"Да\"\n                        icon={<CloseCircleOutlined style={{ color: \"red\" }} />}\n                        onConfirm={() => this.handleDelete(record)}\n                    >\n                        <Button type=\"link\" danger>\n                            Удалить\n                        </Button>\n                    </Popconfirm>\n                ),\n            },\n        ];\n        return columns;\n    }\n    async handleDelete(record) {\n        let res = await axios.get(`${url}/api/proxies/remove/${record._id}`);\n        if (res.data.success) {\n            store.dispatch(fetchProxies(`${url}/api/proxies/`));\n        }\n    }\n    render() {\n        return (\n            <Layout>\n                <Header style={{ background: \"#fff\", padding: 0 }}>\n                    <ProxiesFunctions />\n                </Header>\n                <Content\n                    style={{\n                        background: \"#fff\",\n                        margin: \"16px 12px 0\",\n                        height: \"100%\",\n                        overflowY: \"auto\",\n                    }}\n                >\n                    <Table\n                        dataSource={this.dataSource()}\n                        columns={this.columns()}\n                    />\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        proxies: state.proxies,\n    };\n}\n\nexport default connect(mapStateToProps)(Proxies);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./../components/Home.jsx\";\nimport Settings from \"./../components/Settings.jsx\";\nimport Users from \"./../components/Users.jsx\";\nimport SideBar from \"./../components/SideBar.jsx\";\nimport Proxies from \"./../components/Proxies\";\n\nimport { connect } from \"react-redux\";\n\nimport { Layout } from \"antd\";\nconst { Sider } = Layout;\n\nclass WebPage extends React.Component {\n    test() {\n        console.log(this.props.config);\n    }\n    render() {\n        return (\n            <Router>\n                <Layout style={{ height: \"100%\" }}>\n                    <Sider\n                        breakpoint=\"lg\"\n                        collapsedWidth=\"0\"\n                        onCollapse={(collapsed, type) => {\n                            console.log(collapsed, type);\n                        }}\n                        stype={{ position: \"fixed\" }}\n                    >\n                        <SideBar />\n                    </Sider>\n                    <Route exact path=\"/home\" component={Home} />\n\n                    <Route path=\"/users\" component={Users} />\n                    <Route path=\"/proxies\" component={Proxies} />\n                    <Route path=\"/settings\" component={Settings} />\n                </Layout>\n            </Router>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        config: state.config,\n        files: state.files,\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(WebPage);\n","import settings from \"./containers/settings\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store.jsx\";\n\nimport WebPage from \"./containers/WebPage.jsx\";\n\nimport \"./index.css\";\n\nimport { fetchProxies } from \"./actions/actionProxy.jsx\";\nimport { fetchUsers } from \"./actions/actionUser.jsx\";\n\nlet app = document.getElementById(\"root\");\n\nlet url = settings.url;\n\nfunction loadData() {\n    store.dispatch(fetchProxies(`${url}/api/proxies`));\n    store.dispatch(fetchUsers(`${url}/api/users`));\n}\n\nclass App extends React.Component {\n    componentDidMount() {\n        loadData();\n        console.log(\"Loading data...\");\n    }\n    render() {\n        return (\n            <Provider store={store}>\n                <WebPage />\n            </Provider>\n        );\n    }\n}\n\nReactDOM.render(<App />, app);\n"],"sourceRoot":""}